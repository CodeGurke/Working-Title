[gd_scene load_steps=6 format=3 uid="uid://c8vyybnfvcs4g"]

[ext_resource type="Script" uid="uid://cilrynh232d1w" path="res://scripts/player/player.gd" id="1_dqkch"]
[ext_resource type="Script" uid="uid://b16lwee2l52r4" path="res://scripts/player/character.gd" id="2_qlg0r"]
[ext_resource type="Script" uid="uid://cgm3dfaivhn3n" path="res://scripts/player/damage_component.gd" id="4_fjrip"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_2ie5r"]
size = Vector2(18, 80)

[sub_resource type="GDScript" id="GDScript_qhqgy"]
script/source = "extends Node
# disabled because it doesnt yet have an use
#
#@export var default_state : Node
#
#var states : Array[Node] = [$idle, $move, $jump, $fall]
#var active_states : Array[Node]
#
#
#
#func _init():
	#active_states.append(default_state)
#
#func process_frame() -> void:
	#pass
#
#func process_physics() -> void:
	#active_states.clear()
	#
	#var movement : float = get_movement()
	#var jump : bool = get_jump()
	#
	#if movement == 0 and jump == false:
		#active_states.append($idle)
		#return
	#
	#if movement != 0:
		#active_states.append($move)
	#
	#if jump == true:
		#active_states.append($jump)
#
#func get_movement() -> float:
	#return Input.get_axis('move_left', 'move_right')
#
#func get_jump() -> bool:
	#return Input.is_action_pressed(\"move_up\")
"

[node name="player" type="CharacterBody2D"]
script = ExtResource("1_dqkch")

[node name="character" type="Node2D" parent="."]
unique_name_in_owner = true
script = ExtResource("2_qlg0r")

[node name="collision_box" type="CollisionShape2D" parent="."]
position = Vector2(0, -40)
shape = SubResource("RectangleShape2D_2ie5r")

[node name="player-controller" type="Node" parent="."]
script = SubResource("GDScript_qhqgy")

[node name="idle" type="Node" parent="player-controller"]

[node name="move" type="Node" parent="player-controller"]

[node name="jump" type="Node" parent="player-controller"]

[node name="fall" type="Node" parent="player-controller"]

[node name="damage-component" type="Node2D" parent="."]
script = ExtResource("4_fjrip")

[connection signal="hit" from="character" to="damage-component" method="take_damage"]
